AWSTemplateFormatVersion: '2010-09-09'
Description: AWS Events Stack

# -------------------------------------------

Parameters:

  SlackURL:
    Type: String
    Description: webhook URL for posting events to Slack
    Default: ""

  EmailSenderAddress:
    Type: String
    Description: address to use for sending emails
    Default: ""

  SenderPhoneID:
    Type: String
    Description: address to use for sending texts
    Default: ""

# -------------------------------------------

Resources:
  
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AWSEventsLambdaExecutionRole
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal: 
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SNS_Publish-Events
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              Effect: Allow
              Action: SNS:Publish
              Resource: '*'
              
        - PolicyName: SES_Send-Emails
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              Effect: Allow
              Action:
                - SES:SendEmail
                - SES:SendRawEmail
              Resource: '*'

  EventsReceiver:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: Receive_Events

  # -------------------------------------------
  
  CloudWatchHandler:
    Type: AWS::Lambda::Function
    Properties:
      Code: aws_events/
      Description: handler for CloudWatch events
      FunctionName: Handle_CloudWatch
      Handler: handlers/Handle_CloudWatch.handler
      Runtime: python3.6
      MemorySize: 128
      Timeout: 10
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn

  CloudWatchReceiver:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: Receive_CloudWatch
      Subscription:
        - Protocol: lambda
          Endpoint:
            Fn::GetAtt:
              - CloudWatchHandler
              - Arn
              
  CloudWatchPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref CloudWatchReceiver
      FunctionName:
        Fn::GetAtt:
          - CloudWatchHandler
          - Arn

  # -------------------------------------------

  CloudFormationHandler:
    Type: AWS::Lambda::Function
    Properties:
      Code: aws_events/
      Description: handler for CloudFormation stack events
      FunctionName: Handle_CloudFormation
      Handler: handlers/Handle_CloudFormation.handler
      Runtime: python3.6
      MemorySize: 128
      Timeout: 10
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn

  CloudFormationReceiver:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: Receive_CloudFormation
      Subscription:
        - Protocol: lambda
          Endpoint:
            Fn::GetAtt:
              - CloudFormationHandler
              - Arn

  CloudFormationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref CloudFormationReceiver
      FunctionName:
        Fn::GetAtt:
          - CloudFormationHandler
          - Arn

  # -------------------------------------------
  
  RDSHandler:
    Type: AWS::Lambda::Function
    Properties:
      Code: aws_events/
      Description: handler for RDS events
      FunctionName: Handle_RDS
      Handler: handlers/Handle_RDS.handler
      Runtime: python3.6
      MemorySize: 128
      Timeout: 10
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn

  RDSReceiver:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: Receive_RDS
      Subscription:
        - Protocol: lambda
          Endpoint:
            Fn::GetAtt:
              - RDSHandler
              - Arn
                  
  RDSPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref RDSReceiver
      FunctionName:
        Fn::GetAtt:
          - RDSHandler
          - Arn

  # -------------------------------------------
  
  ElastiCacheHandler:
    Type: AWS::Lambda::Function
    Properties:
      Code: aws_events/
      Description: handler for ElastiCache events
      FunctionName: Handle_ElastiCache
      Handler: handlers/Handle_ElastiCache.handler
      Runtime: python3.6
      MemorySize: 128
      Timeout: 10
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn

  ElastiCacheReceiver:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: Receive_ElastiCache
      Subscription:
        - Protocol: lambda
          Endpoint:
            Fn::GetAtt:
              - ElastiCacheHandler
              - Arn

  ElastiCachePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref ElastiCacheReceiver
      FunctionName:
        Fn::GetAtt:
          - ElastiCacheHandler
          - Arn

  # -------------------------------------------
  
  ElasticBeanstalkHandler:
    Type: AWS::Lambda::Function
    Properties:
      Code: aws_events/
      Description: handler for ElasticBeanstalk events
      FunctionName: Handle_ElasticBeanstalk
      Handler: handlers/Handle_ElasticBeanstalk.handler
      Runtime: python3.6
      MemorySize: 128
      Timeout: 15
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn

  ElasticBeanstalkReceiver:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: Receive_ElasticBeanstalk
      Subscription:
        - Protocol: lambda
          Endpoint:
            Fn::GetAtt:
              - ElasticBeanstalkHandler
              - Arn

  ElasticBeanstalkPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref ElasticBeanstalkReceiver
      FunctionName:
        Fn::GetAtt:
          - ElasticBeanstalkHandler
          - Arn

  # -------------------------------------------
  
  HealthEventsRule:
    Type: AWS::Events::Rule
    Properties:
      Name: AWS-Events_Health-Events-Rule
      Description: AWS-Events Health Events Receiver
      State: ENABLED
      EventPattern:
        source:
          - aws.health
      Targets:
        - Arn:
            Fn::GetAtt:
              - HealthEventsHandler
              - Arn
          Id: !Ref HealthEventsHandler
        
  HealthEventsHandler:
    Type: AWS::Lambda::Function
    Properties:
      Code: aws_events/
      Description: handler for Personal Health events
      FunctionName: Handle_HealthEvents
      Handler: handlers/Handle_HealthEvents.handler
      Runtime: python3.6
      MemorySize: 128
      Timeout: 10
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
          
  HealthEventsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref HealthEventsHandler
      Action: lambda:InvokeFunction
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - HealthEventsRule
          - Arn

  # -------------------------------------------
  
  ECSEventsRule:
    Type: AWS::Events::Rule
    Properties:
      Name: AWS-Events_ECS-Events-Rule
      Description: AWS ECS Events Receiver
      State: ENABLED
      EventPattern:
        source:
          - aws.ecs
        detail-type:
          - ECS Task State Change
          - ECS Container Instance State Change
      Targets:
        - Arn:
            Fn::GetAtt:
              - ECSEventsHandler
              - Arn
          Id: !Ref ECSEventsHandler
        
  ECSEventsHandler:
    Type: AWS::Lambda::Function
    Properties:
      Code: aws_events/
      Description: handler for ECS events
      FunctionName: Handle_ECS
      Handler: handlers/Handle_ECS.handler
      Runtime: python3.6
      MemorySize: 128
      Timeout: 10
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
          
  ECSEventsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ECSEventsHandler
      Action: lambda:InvokeFunction
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - ECSEventsRule
          - Arn

  # -------------------------------------------
  
  SlackNotifier:
    Type: AWS::Lambda::Function
    Properties:
      Code: aws_events/
      Description: notifier for Slack
      FunctionName: Notify_Slack
      Handler: notifiers/Notify_Slack.handler
      Runtime: python3.6
      MemorySize: 128
      Timeout: 20
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Environment:
        Variables:
          SlackURL: !Ref SlackURL
  
  EmailNotifier:
    Type: AWS::Lambda::Function
    Properties:
      Code: aws_events/
      Description: notifier for Email
      FunctionName: Notify_Email
      Handler: notifiers/Notify_Email.handler
      Runtime: python3.6
      MemorySize: 128
      Timeout: 20
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Environment:
        Variables:
          SenderEmailAddress: !Ref EmailSenderAddress
          
  PhoneTextNotifier:
    Type: AWS::Lambda::Function
    Properties:
      Code: aws_events/
      Description: notifier for SMS texts
      FunctionName: Notify_Phone_Text
      Handler: notifiers/Notify_Phone_Text.handler
      Runtime: python3.6
      MemorySize: 128
      Timeout: 20
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Environment:
        Variables:
          SenderPhoneID: !Ref SenderPhoneID